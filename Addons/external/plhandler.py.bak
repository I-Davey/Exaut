from sqlalchemy import insert
from __important.PluginInterface import PluginInterface
from backend.db.Exaut_sql import *
import os 
import json

class plhandler(PluginInterface):
    load = True
    types = {"source":3}
    type_types = {"source":["drag_drop_folder", "Please select Pipeline"], "__Name":"Data Pipeline"}

    callname = "phndlr"
    hooks_handler = ["log"]
    hooks_method = ["writesql"]



    def load_self(self, hooks):
        self.logger = hooks["log"]
        return True

    def load_self_methods(self, hooks):
        self.writesql = hooks["writesql"].main

    # "keyfile":8,"runsequence":9,"treepath":10,"buttonname":11}


    def main(self, folder , Plugins) -> bool: 
        folder = folder.replace("/", "\\")
        #for file in folder
        filelist = []
        for file in os.listdir(folder):
            if file.endswith(".json"):
                file = json.loads(open(folder + "\\" + file, "r").read())
                filelist.append(file)
        print("done")
        for file in filelist:
            print(file)


        